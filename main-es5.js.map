{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/card/card.component.ts","webpack:///src/app/card/card.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/player/player-controller.directive.ts","webpack:///src/app/player/player.component.ts","webpack:///src/app/player/player.component.html","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/services/base.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","declarations","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","CardComponent","baseService","currentSong","emit","songPath","songName","nextSong","queueData","imgClick","playNext","onQueueClick","HomeComponent","dataService","songs","getSongs","subscribe","data","console","log","trendingDiv","nativeElement","scrollLeft","scrollRight","NavComponent","PlayerControllerDirective","elementRef","event","seekbarData","next","currentTime","duration","PlayerComponent","snackBar","audio","Audio","cTime","songDuration","songStatus","repeatStatus","queueStatus","songUrlQueue","songNameQueue","obj","playSong","url","sToTime","c","d","progressBar","value","currentSongUrl","currentSongName","nextSongUrl","nextSongName","index","indexOf","length","status","snackBarRef","open","verticalPosition","panelClass","push","name","player","document","getElementById","src","load","play","pause","t","padZero","Math","floor","v","percent","offsetX","offsetWidth","seek","onRepeatClick","SearchComponent","BaseService","providedIn","DataService","http","get","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeComponent } from './home/home.component';\n\nconst routes:Routes=[\n  {path:'', component: HomeComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'mdb-angular-free';\n}\n","<app-nav></app-nav>\n\n<div class=\"container-fluid\" style=\"width: 94%;\">\n<router-outlet></router-outlet>\n</div>\n\n<app-player></app-player>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,  } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\nimport { PlayerComponent } from './player/player.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NavComponent } from './nav/nav.component';\nimport { CardComponent } from './card/card.component';\nimport { BaseService } from './services/base.service';\nimport { DataService } from './services/data.service';\nimport { PlayerControllerDirective } from './player/player-controller.directive';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { SearchComponent } from './search/search.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PlayerComponent,\n    HomeComponent,\n    NavComponent,\n    CardComponent,\n    PlayerControllerDirective,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatSnackBarModule\n  ],\n  providers: [BaseService,DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { BaseService } from '../services/base.service';\nimport { Song } from '../song';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  @Input()\n  imgUrl:string;\n\n  @Input()\n  songName:string;\n  @Input()\n  songPath:string;\n  @Input()\n  count:number;\n  @Input()\n  artist:string;\n  @Input()\n  releaseDate:string;\n\n  @ViewChild('playNext') playNextIcon:ElementRef;\n\n  constructor(private baseService: BaseService ) { }\n\n  ngOnInit(): void {\n    // console.log(this.song.imgUrl);\n  }\n\n  imgClick(){\n    this.baseService.currentSong.emit({\"url\":this.songPath,\"songName\":this.songName});\n  }\n\n  playNext(){\n    \n    this.baseService.nextSong.emit({\"url\":this.songPath,\"songName\":this.songName});\n  }\n\n  onQueueClick(){\n    this.baseService.queueData.emit({\"url\":this.songPath,\"songName\":this.songName});\n  }\n}\n","<!-- <div class=\" m-2 container\">\n    <div class=\"row\">\n\n        <div class=\"card\">\n            <div class=\"card card-inverse card-info\">\n                \n                <div class=\"view overlay\" (click)=\"imgClick()\" style=\"cursor: pointer\">\n                    <img class=\"card-img-top\" [src]=\"imgUrl\">\n                    <div class=\"mask flex-center rgba-blue-light\">\n                        <p class=\"white-text\"><i class=\"far fa-play-circle fa-4x\"></i></p>\n                    </div>\n                </div>\n            </div>\n\n\n\n            <span class=\"card-title\">{{songName}}</span>\n\n\n            <div>\n                <small>{{releaseDate}}</small>\n                <i class=\"fas fa-share-alt float-right\"></i>\n                <i class=\"fas fa-chevron-circle-right\"></i>\n            </div>\n        </div>\n\n\n\n    </div>\n</div> -->\n<!-- Card Light -->\n<div class=\"card\" style=\"width: 100%; height: 220px;\">\n\n    <!-- Card image -->\n    <div class=\"view overlay\" (click)=\"imgClick()\" >\n      <img class=\"card-img-top\" \n        [src]=\"imgUrl\" alt=\"Card image cap\" style=\"width: 100%; height:160px;\">\n      <a>\n        <div class=\"mask flex-center rgba-white-slight\">\n            <p class=\"white-text\"><i class=\"far fa-play-circle fa-4x\"></i></p>\n\n        </div>\n      </a>\n    </div>\n  \n    <!-- Card content -->\n    <div >\n      <p class=\"card-title\" >{{songName}}</p>\n   \n      <!-- Social shares button -->\n      <!-- <a class=\"activator waves-effect waves-light mr-4\"><i class=\"fas fa-share-alt\"></i></a> -->\n    </div>\n    <div class=\"row\" style=\"cursor: pointer;\">\n      <div class=\"col col-md-12\">\n        <span class=\"material-icons float-right \" mdbWavesEffect data-toggle=\"tooltip\" data-placement=\"bottom\"\n        title=\"Share\" style=\"font-size: 20px;\">share</span>\n        \n        <span class=\"material-icons float-right pl-2 pr-2\" mdbWavesEffect (click)=\"playNext()\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n        title=\"Play Next\" style=\"font-size: 20px;\">double_arrow</span>\n        \n        <span class=\"material-icons float-right \" mdbWavesEffect (click)=\"onQueueClick()\" data-toggle=\"tooltip\" data-placement=\"bottom\"\n        title=\"Add To Queue\" style=\"font-size: 20px;\">queue</span>\n    </div>\n    </div>\n  </div>\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\n\n\nimport { DataService } from '../services/data.service';\nimport { Song } from '../song';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, AfterViewInit{\n\n  public songs:Song[]=[];\n  @ViewChild('trending') trendingDiv: ElementRef;\n  \n  constructor(private dataService:DataService) { }\n\n  ngOnInit(): void {\n\n    \n    this.dataService.getSongs()\n    .subscribe(data=>{\n         this.songs=data;\n    \n    });\n    // console.log(this.songs);\n  }\n  ngAfterViewInit(){\n    \n  }\n\n  scrollRight(){\n    console.log(this.trendingDiv.nativeElement.scrollLeft);\n    this.trendingDiv.nativeElement.scrollLeft+=120;    \n\n  }\n  scrollLeft(){\n    console.log(this.trendingDiv.nativeElement.scrollLeft);\n    this.trendingDiv.nativeElement.scrollLeft-=120;    \n\n  }\n  \n\n}\n","\n<div class=\"container-fluid  testimonial-group\">\n    <br>\n    <h3 class=\"font-weight-bolder\">Trending</h3>\n        \n    <hr>\n    <div class=\"row flex-row flex-nowrap\" #trending>\n        \n        <div class=\"col-2 pt-3\" *ngFor=\"let song of songs\">\n        \n            <app-card [imgUrl]=\"song.imgUrl\" [artist]=\"song.artist\" [count]=\"song.count\" [releaseDate]=\"song.releaseDate\"\n              [songPath]=\"song.songPath\" [songName]=\"song.songName\"></app-card>\n        \n        \n        </div>\n        \n        \n    </div>\n    \n            <span class=\"material-icons float-left\" (click)=\"scrollLeft()\" mdbWavesEffect style=\"font-size: 27px;cursor: pointer;\">\n            keyboard_arrow_left</span>\n            <span class=\"material-icons float-right\" (click)=\"scrollRight()\" mdbWavesEffect style=\"font-size: 27px;cursor: pointer;\">\n            keyboard_arrow_right\n            </span>\n    \n    \n</div>    \n<br>\n<br>\n<div class=\"container-fluid\">\n    <h3 class=\"font-weight-bolder\">Albums</h3>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-2 pt-3\" *ngFor=\"let song of songs\">\n        \n            <app-card [imgUrl]=\"song.imgUrl\" [artist]=\"song.artist\" [count]=\"song.count\" [releaseDate]=\"song.releaseDate\"\n              [songPath]=\"song.songPath\" [songName]=\"song.songName\"></app-card>\n        \n        \n        </div>\n    </div>\n</div>     ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--Navbar-->\n<mdb-navbar  SideClass=\"navbar navbar-expand-lg navbar-dark purple-gradient py-4\">\n\n    <!-- Navbar brand -->\n    <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\"><i class=\"fas fa-music\"></i> <strong> Sangeet.com</strong></a></mdb-navbar-brand>\n  \n  \n    <mdb-icon fas icon=\"angle-left\" size=\"lg\" class=\"text-white mr-auto d-flex d-md-none align-self-center\"></mdb-icon>\n  \n    <!-- Collapsible content -->\n    <links>\n  \n      <!-- Links -->\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link waves-light\" mdbWavesEffect>Home<span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link waves-light\" mdbWavesEffect>Artists</a>\n        </li>\n        \n  \n        <!-- Dropdown -->\n        <li class=\"nav-item dropdown\" dropdown>\n          <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n            Genere<span class=\"caret\"></span></a>\n          <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Pop</a>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Rock</a>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Melody</a>\n            <div class=\"divider dropdown-divider\"></div>\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Separated link</a>\n          </div>\n        </li>\n  \n      </ul>\n      <!-- Links -->\n  \n      <!-- Search form -->\n      <form class=\"form-inline waves-light\" mdbWavesEffect>\n        <div class=\"md-form my-0\">\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\">\n        </div>\n      </form>\n  \n      <ul class=\"navbar-nav ml-auto nav-flex-icons fa-2x\">\n        \n        <li class=\"nav-item\">\n          <a class=\"nav-link\">\n            <div class=\"btn-group\" mdbDropdown>\n              <mdb-icon fas icon=\"user\" mdbDropdownToggle></mdb-icon>\n              <div class=\"dropdown-menu dropdown-menu-right dropdown-primary\">\n                <a class=\"dropdown-item\" href=\"#\">My Profile</a>\n                \n                <div class=\"divider dropdown-divider\"></div>\n                <a class=\"dropdown-item\" href=\"#\">Logout</a>\n              </div>\n            </div>\n          </a>\n        </li>\n      </ul>\n  \n  \n    </links>\n    <!-- Collapsible content -->\n  \n  \n  </mdb-navbar>\n  <!--/.Navbar-->","import { OnInit, ElementRef, Directive, HostListener, ViewChild } from '@angular/core';\r\nimport { BaseService } from '../services/base.service';\r\n\r\n@Directive({\r\n    selector: '[playerController]'\r\n})    \r\n\r\nexport class PlayerControllerDirective implements OnInit{\r\n\r\n    \r\n\r\n    constructor(private elementRef: ElementRef,private baseService:BaseService) {\r\n\r\n    }\r\n    \r\n    ngOnInit(){\r\n\r\n\r\n    \r\n    }\r\n    @HostListener('timeupdate') fun(event:Event){\r\n        this.baseService.seekbarData.next({\"c\":this.elementRef.nativeElement.currentTime,\"d\":this.elementRef.nativeElement.duration});\r\n        // this.seekbar.val=170;\r\n    }\r\n    \r\n}","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { BaseService } from '../services/base.service';\n\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport { ThrowStmt } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit, AfterViewInit{\n  \n  audio=new Audio();\n  \n  player:any;\n  \n  cTime:string=\"00:00:00\";\n  songDuration:string=\"00:00:00\";\n  \n  currentSongUrl:string;   \n  nextSongUrl:string;\n  currentSongName:string;\n  nextSongName:string;\n\n  songStatus:string='null';\n  playNext:boolean=false;   //check next song to be played or not\n  repeatStatus:boolean=false;\n  status:boolean;\n  queueStatus:boolean=false;\n\n  songUrlQueue:string[]=[];\n  songNameQueue:string[]=[];\n\n  @ViewChild('customRange') progressBar:ElementRef;\n  \n  @ViewChild('repeat') repeatIcon:ElementRef;\n  \n\n  constructor(private baseService: BaseService , private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n\n\n    //current play\n    this.baseService.currentSong.subscribe(obj=>{\n      \n      this.playSong(obj.url,obj.songName);\n            \n      \n    });    \n\n    //update the progress bar and duration span\n    this.baseService.seekbarData.subscribe(data=>{\n      \n        this.cTime=this.sToTime(data.c);\n        this.songDuration=this.sToTime(data.d);\n        this.progressBar.nativeElement.value = (data.c/data.d );\n\n        if(data.c==data.d && this.repeatStatus){\n            this.playSong(this.currentSongUrl,this.currentSongName);\n        }\n        else if(data.c==data.d && this.playNext){\n\n          // console.log(\"works\");\n          this.playSong(this.nextSongUrl,this.nextSongName);\n          this.nextSongName='';\n          this.playNext=false;\n        }\n        else if(data.c==data.d && this.queueStatus){\n\n          var index=this.songUrlQueue.indexOf(this.currentSongUrl);\n          this.playSong(this.songUrlQueue[index+1],this.songNameQueue[index+1]);\n          \n          if((index+1) == (this.songUrlQueue.length-1)) this.queueStatus=false;\n        }\n        else if(data.c==data.d){\n\n          this.songStatus='stoped';\n          this.status=false;\n        }\n  \n    });\n\n    //for next song\n    this.baseService.nextSong.subscribe(obj=>{\n      \n          this.nextSongUrl=obj.url;\n          this.nextSongName=obj.songName;\n          this.playNext=true;\n\n          let snackBarRef = this.snackBar.open(\"song added\",\"\", {\n            duration: 1040,\n            // here specify the position\n            verticalPosition: 'top',\n            panelClass: ['next-snackbar'],\n          });\n    });\n\n    //for song queue\n    this.baseService.queueData.subscribe(obj=>{\n      this.songUrlQueue.push(obj.url);\n      this.songNameQueue.push(obj.songName);\n      //console.log(this.songQueue);\n      this.queueStatus=true;\n\n      let snackBarRef = this.snackBar.open(\"song added to queue\",\"\", {\n        duration: 1040,\n        // here specify the position\n        verticalPosition: 'top',\n        panelClass: ['next-snackbar'],\n      });\n\n    });\n    \n\n  }\n\n  ngAfterViewInit(): void{\n    \n    \n\n  }\n\n  playSong(url:string,name?:string){\n      this.status=true;\n      this.player = <HTMLAudioElement>document.getElementById(\"player\");\n      this.player.src=url;\n      this.player.load();\n      this.player.play();\n      this.songStatus='playing';\n      this.currentSongUrl=url;\n      this.currentSongName=name;\n  }\n\n  //for play button\n  onPlayClick(){\n    this.player.play();\n    this.status=true;\n    \n    this.songStatus='playing';\n  }\n\n  //for pause button\n  onPauseClick(){\n    this.player.pause();\n    this.status=false;\n    this.songStatus='paused';\n  }\n\n  seekbarHandler(){\n  }\n\n  sToTime(t:any) {\n    return this.padZero(Math.floor((t / (60 * 60)) % 24)) + \":\" +\n           this.padZero(Math.floor((t / (60)) % 60)) + \":\" + \n           this.padZero(Math.floor((t) % 60));\n  }\n  padZero(v:any) {\n    return (v < 10) ? \"0\" + v : v;\n  }\n\n  seek(event:MouseEvent) {\n      //  console.log(event);\n    var percent = event.offsetX / this.progressBar.nativeElement.offsetWidth;\n    this.player.currentTime = Math.floor(percent * this.player.duration);\n    this.progressBar.nativeElement.value = percent / 100;\n  }\n  \n\n  onRepeatClick(){\n    this.repeatStatus=!this.repeatStatus;\n    \n    \n  }\n}\n","<!-- Footer -->\n<footer style=\"height: 56px;color:black;\" class=\"page-footer text-center z-depth-5 rare-wind-gradient fixed-bottom\">\n\n  <audio playerController id=\"player\">\n    <source src=\"/assets/vaifilhao.mp3\" type=\"audio/mp3\">\n    Your browser does not support the audio element.  \n   </audio>\n\n<br>\n<!--  -->\n  <div class=\"row\" [ngStyle]=\"{'pointer-events': songStatus=='playing' || songStatus=='paused' ? 'all':'none'}\">\n\n      <div class=\"col-md-2\" >\n        <i class=\"fas fa-fast-backward fa-2x pr-3 pb-3\"></i>\n\n        <i *ngIf=\"!status; else pause\" class=\"fas fa-play fa-2x pr-3\"   (click)=\"onPlayClick()\"></i>\n        <ng-template #pause> <i class=\"fas fa-pause fa-2x pr-3\" (click)=\"onPauseClick()\"></i></ng-template>\n\n        <i class=\"fas fa-fast-forward fa-2x\"></i>        \n      </div>\n\n      <div class=\"col col-md-5 \"  id=\"slider\">\n        <input type=\"range\" class=\"bar\"  \n         value=\"0\" max=\"1\" step=\"0.0005\" (click)=\"seek($event)\" #customRange>\n         \n      </div>\n\n      <div class=\" col col-md-2\">\n        <span class=\"float-left\" style=\"font-weight: bolder; color:black;\">{{cTime}}/{{songDuration}}</span>\n      </div>\n\n      <div class=\" col col-md-3\" >\n        \n        <span class=\"material-icons float-left\" mdbWavesEffect [ngStyle]=\"{'font-size':'36px','font-weight':'900','color':repeatStatus?'black':'darkgray','cursor': 'pointer'}\" (click)=\"onRepeatClick()\" #repeat>\n          repeat\n        </span>\n\n        <div class=\"dropup float-left\">\n          <span class=\"material-icons dropbtn\" mdbWavesEffect style=\"font-size: 42px;\">queue_music</span>\n        \n          <div class=\"dropup-content\">\n            <a *ngFor=\"let song of songNameQueue;let i=index\" [ngStyle]=\"{'background-color': (song==currentSongName)? '#ddd':'white'}\" (click)=\"playSong(songUrlQueue[i],song)\">\n              <i *ngIf=\"song==currentSongName\" class=\"fas fa-play float-left pr-1\"></i>\n              {{song}}</a>\n          </div>\n        </div>\n        \n      </div>  \n\n     \n\n  </div>\n</footer>\n  <!-- Footer -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>search works!</p>\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService {\n\n  currentSong = new EventEmitter<{url:string,songName:string}>();\n\n  seekbarData=new Subject<{c:number,d:number}>();\n  nextSong=new EventEmitter<{url:string,songName:string}>();\n  queueData=new EventEmitter<{url:string,songName:string}>();\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Song } from '../song';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http:HttpClient) { }\n\n  getSongs(): Observable<Song[]>{\n    return this.http.get<Song[]>(\"../assets/data.json\");\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}